// Calculate REMS FROM PX
@function calculateRem($size)
  $remSize: $size / $base-font-size
  @return #{$remSize}rem


@mixin fontsize-rem($size)
  font-size: $size
  font-size: calculateRem($size)

@mixin center($xy:xy)
  @if $xy == xy
    left: 50%
    top: 50%
    bottom: auto
    right: auto
    transform: translateX(-50%) translateY(-50%)
  @else if $xy == x
    left: 50%
    right: auto
    transform: translateX(-50%)
  @else if $xy == y
    top: 50%
    bottom: auto
    transform: translateY(-50%)

//clearfix 2 types
@import "compass/utilities/general/clearfix"
=clearfix-custom
  *zoom: 1
  &:before,
  &:after
    content: ""
    display: table
  &:after
    clear: both

//scrollbar styling Forked from [Hugo Giraudel](http://codepen.io/HugoGiraudel/)'s Pen [Sass mixin for scrollbar styling](http://codepen.io/HugoGiraudel/pen/KFDuB/)
@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white, 40%))
  ::-webkit-scrollbar
    width:  $size
    height: $size
  ::-webkit-scrollbar-thumb
    background: $foreground-color
  ::-webkit-scrollbar-track
    background: $background-color

  // For Internet Explorer

  body
    scrollbar-face-color: $foreground-color
    scrollbar-track-color: $background-color
//button
@mixin outline-btn($bgcolor, $ouline-color, $y:yang)
  @if $y == yang
    color: shade($ouline-color, 20%)
  @else
    color: $ouline-color
    //applied feedback part disabled button text
    &[disabled]
      color: rgba($deep-gray, 0.7)
  &::before,
  &::after
    z-index: -1
    width: 100%
    height: 100%
    content: ""
    position: absolute
    top: 0
    left: 0
    +transition(transform 0.2s, opacity 0.2s)
    +transition-timing-function(cubic-bezier(0.75, 0, 0.125, 1))

  &::before
    /*hover color*/
    @if $y == yang
      background-color: $white
      color: shade($ouline-color, 50%)
      border: 2px solid shade($ouline-color, 10%)
    @else if $y == yin
      //background-color: $ouline-color
      background-color: $medium-grey
      border: 2px solid shade($bgcolor, 20%)
    opacity: 0
    +transform3d(scale3d(1.2, 1.2, 1))

  &::after
    /*init color for disabled button*/
    //border: 2px solid shade($ouline-color, 30%)
    border: 2px solid rgba($deep-gray, 0.4)
  &:not([disabled]):after
    /*init color*/
    background: $bgcolor
    border: 2px solid $ouline-color

  &:not([disabled]):hover
    @if $y == yang
      //color: $bgcolor
      color: shade($ouline-color, 30%)

      &:active
        //not working changing background-color
        color: $balanced-yellow

    @else if $y == yin
      color: shade($bgcolor, 30%)
      -webkit-filter: brightness(97%)
      &:active
        color: shade($bgcolor, 70%)
    &::before
      opacity: 1
      +transform3d(scale3d(1, 1, 1))

    &::after
      opacity: 0
      +transform3d(scale3d(0.9, 0.8, 1))

//layout-outline
@mixin layout-outline($color: $misty-grey2)
  border: 1px solid $color
  height: 100%


//caret
=caret($point:top, $color: $dark-jet , $size: 10px)
  $opposite: opposite-position($point)
  border: $size solid transparent
  border-#{$opposite}: $size solid $color
  border-#{$point}: 0
  height: 0
  width: 0
.caret
  +caret(top, $dark-jet, 30px)


//refer to http://lugolabs.com/caret
=line-caret($vertical : true , $caret-width: 20px, $border-width: 2px, $direction: bottom, $caret-color : $energetic-red, $bg-color : $grey, $hover-color : $white)
  //position: relative
  $bg-width : $caret-width - $border-width
  $opposite : opposite-position($direction)
  &:before
    content: ''
    position: absolute
    top: 0
    left: 0
    border-#{$opposite}: $caret-width solid $caret-color
    @if $vertical == true
      border-left: $caret-width solid transparent
      border-right: $caret-width solid transparent
    @else
      border-top: $caret-width solid transparent
      border-bottom: $caret-width solid transparent
  &:after
    content: ''
    position: absolute
    left: $border-width
    top: $border-width
    border-#{$opposite}: $bg-width solid $bg-color

    @if $vertical == true
      border-left: $bg-width solid transparent
      border-right: $bg-width solid transparent
    @else
      border-top: $bg-width solid transparent
      border-bottom: $bg-width solid transparent

  &:hover:before
    border-#{$opposite}-color: $hover-color

//autocomplete select : applied to label
=pseudo-container
  content: ''
  position: absolute
  width: 100%


// create placeholder mixin
@mixin placeholder($color, $size:"")
  &::-webkit-input-placeholder
    color: $color
    @if $size != ""
      font-size: $size
  &:-moz-placeholder
    color: $color
    @if $size != ""
      font-size: $size
  &::-moz-placeholder
    color: $color
    @if $size != ""
      font-size: $size
  &:-ms-input-placeholder
    color: $color
    @if $size != ""
      font-size: $size


//first li element
=part-title
  div.title
    +adjust-leading-to(4, $base-font-size + 14px)
    position: relative
    height: 60px
    &:first-child:not(.no-padding)
      margin-top: 0px
      @include susy-breakpoint($bp-wide, $susy-wide)
        +margin-leader(1, $base-font-size + 14px)
    h1
      position: absolute
      top : -20%
      +center(x)
      letter-spacing: 0.05em
      color: $grey
    //.point
    //  display: inline
    span
      position: absolute
      //bottom: -7%
      +center(x)
      color: $grey
      bottom: -25%

